# Most generated by new bing
import math

def pell(n):
    # check if n is a perfect square
    if math.isqrt(n)**2 == n:
        return "No solution"

    # initialize variables for continued fraction expansion
    # (m+sqrt(n))/d
    d = 1
    m = 0
    a = 0 # Fix by me
    a0 = math.isqrt(n)

    m = d * a - m # Fix by me
    d = (n - m * m) // d # Fix by me
    a = (a0 + m) // d # Fix by me

    # initialize variables for convergents
    p0,q0 = 0,1
    p1,q1 = 1,0

    # loop until a solution is found
    while True:
        # update variables for continued fraction expansion
        m = d * a - m
        d = (n - m * m) // d
        a = (a0 + m) // d

        # update variables for convergents using recurrence relations
        p2 = a * p1 + p0
        q2 = a * q1 + q0

        # check if the current convergent satisfies Pell's equation
        if p2 * p2 - n * q2 * q2 == 1:
            return (p2, q2)

        # update previous convergents
        p0, p1 = p1, p2
        q0, q1 = q1, q2

# test cases
print(pell(2)) # (3,2)
print(pell(61)) # (1766319049, 226153980)
print(pell(109)) # (158070671986249, 15140424455100)
print(pell(4)) # No solution
